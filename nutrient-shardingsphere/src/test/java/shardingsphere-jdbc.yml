dataSources:
  ds0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.184.129:3306/beecomb_0
    username: root
    password: 123456
  ds1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.184.129:3306/beecomb_1
    username: root
    password: 123456


rules:
- !SHARDING
  tables: 
    job_main: 
      actualDataNodes: ds${0..1}.job_main
      databaseStrategy: 
        standard: 
          shardingColumn: id
          shardingAlgorithmName: dsinline
#      tableStrategy: 
#        standard: 
#          shardingColumn: id
#          shardingAlgorithmName: job_main_table_inline
      keyGenerateStrategy: 
        column: id
        keyGeneratorName: my_SNOWFLAKE

#    job_detail: 
#      actualDataNodes: ds${0..1}.job_detail${0..1}
#      databaseStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: ds_jobid_mod_inline
#      tableStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: job_detail_table_inline          
#          
#    delay_job: 
#      actualDataNodes: ds${0..1}.delay_job${0..1}
#      databaseStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: ds_jobid_mod_inline
#      tableStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: delay_job_table_inline             
#
#    schedule_job: 
#      actualDataNodes: ds${0..1}.schedule_job${0..1}
#      databaseStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: ds_jobid_mod_inline          
#      tableStrategy: 
#        standard: 
#          shardingColumn: job_id
#          shardingAlgorithmName: schedule_job_table_inline             
        
#  autoTables: # 自动分片表规则配置
#    t_order_auto: # 逻辑表名称
#      actualDataSources (?): # 数据源名称
#      shardingStrategy: # 切分策略
#        standard: # 用于单分片键的标准分片场景
#          shardingColumn: # 分片列名称
#          shardingAlgorithmName: # 自动分片算法名称

#  bindingTables:
#    - job_main,job_detail,delay_job,schedule_job
#  broadcastTables: 
#    - t_config
    
#  defaultDatabaseStrategy: # 默认数据库分片策略
#  defaultTableStrategy: # 默认表分片策略
#  defaultKeyGenerateStrategy: # 默认的分布式序列策略
#  defaultShardingColumn: # 默认分片列名称
  
#  defaultDatabaseStrategy:
#    standard:
#      shardingColumn: user_id
#      shardingAlgorithmName: t_order_ds
  
  # 分片算法配置
  shardingAlgorithms:
    dsinline: 
      type: INLINE 
      props: 
        algorithm-expression: ds${id % 2} 
      # ...
    ds_jobid_mod_inline: 
      type: INLINE 
      props: 
        algorithm-expression: ds${job_id % 2} 
      # ...      
      
    job_main_table_inline: 
      type: INLINE 
      props: 
        algorithm-expression: job_main${id % 2} 
      # ...
    job_detail_table_inline: 
      type: INLINE 
      props: 
        algorithm-expression: job_detail${job_id % 2} 
      # ...
    delay_job_table_inline: 
      type: INLINE 
      props: 
        algorithm-expression: delay_job${job_id % 2} 
      # ...
    schedule_job_table_inline: 
      type: INLINE 
      props: 
        algorithm-expression: schedule_job${job_id % 2} 
      # ...                  
  
  # 分布式序列算法配置
  keyGenerators:
    my_SNOWFLAKE: 
      type: SNOWFLAKE 
#      props: # 分布式序列算法属性配置
#      # ...
    

